@page "/edit-conference/{conferenceId:int}"
@using Conferences_projet.Models
@using Conferences_projet.service
@inject ConferenceService ConferenceService
@inject NavigationManager Navigation

<h3>Edit Conference</h3>

<EditForm Model="conference" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Nom:</label>
        <InputText @bind-Value="conference.Nom" />
    </div>
    <div>
        <label>Sigle:</label>
        <InputText @bind-Value="conference.Sigle" />
    </div>
    <div>
        <label>Theme:</label>
        <InputText @bind-Value="conference.Theme" />
    </div>
    <div>
        <label>Date de Soumission:</label>
        <InputDate @bind-Value="conference.DateSoumission" />
    </div>
    <div>
        <label>Date Limite des Résultats:</label>
        <InputDate @bind-Value="conference.DateLimiteResultats" />
    </div>
    <div>
        <label>Date Limite d'Inscription:</label>
        <InputDate @bind-Value="conference.DateLimiteInscription" />
    </div>
    <div>
        <label>Date de Début:</label>
        <InputDate @bind-Value="conference.DateDebut" />
    </div>
    <div>
        <label>Date de Fin:</label>
        <InputDate @bind-Value="conference.DateFin" />
    </div>
    <button type="submit">Save</button>
</EditForm>

@code {
    [Parameter]
    public int ConferenceId { get; set; }

    private Conference conference = new Conference();

    protected override async Task OnInitializedAsync()
    {
        conference = await ConferenceService.GetConferenceByIdAsync(ConferenceId);
    }

    private async Task HandleValidSubmit()
    {
        await ConferenceService.UpdateConferenceAsync(conference);
        Navigation.NavigateTo("/show-conference");
    }
}
